(define (init-rows size)
  (let ((col (make-vector size 0)))
    (make-vector size (vector-copy col))))

(define  (init-game size)
  (list (cons "size" size)
        (cons "turn" 0)
        (cons "board" (init-rows size))))

(define (mark-cell row col next-player game)
  (let ((new-game (copy-tree game))
        (success #t))
    (let ((sel-row (vector-ref (cdr (list-ref new-game 2)) row))
          (player (assoc-ref new-game "turn")))
      (display player)
      (newline)
      (if (= (vector-ref sel-row col) 0)
          (begin (vector-set! sel-row col player)
                 (set! new-game (assoc-set! new-game "turn" next-player)))
          (set! success #f)))
    (values new-game success)))
