(define (init-rows size)
  (let ((col (make-vector size 0)))
    (make-vector size (vector-copy col))))

(define  (init-game size)
  (list (cons "size" size)
        (cons "turn" 0)
        (cons "board" (init-rows size))))

(define (mark-cell row col player game)
  (let ((cell (cons col player))
        (new-game (copy-tree game))
        (success #t))
    (let ((sel-row (vector-ref (cdr (list-ref new-game 2)) row)))
      (if (= (vector-ref sel-row col) 0)
          (vector-set! sel-row col player)
          (set! success #f)))
    (values new-game success)))
